{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","users","find","user","TodoForm","onAdd","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","completed","className","htmlFor","type","placeholder","value","onChange","target","required","disabled","usersFromServer","map","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","initialTodos","App","todosList","setTodosList","newTodo","Math","max","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99d5ec6a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import users from '../api/users';\n\nexport function getUserById(userId: number) {\n  return users.find(user => user.id === userId)\n      || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../api/users';\nimport { getUserById } from '../services/user';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError('');\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setHasTitleError('Please enter a title');\n    }\n\n    if (!userId) {\n      setHasUserError('Please choose a user');\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAdd({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"field\" htmlFor=\"todoTitle\">\n        Title:&nbsp;&nbsp;\n\n        <input\n          id=\"todoTitle\"\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n      </label>\n\n      <span className=\"error\">{hasTitleError}</span>\n\n      <div className=\"field\">\n        <label htmlFor=\"todoUser\">User: </label>\n\n        <select\n          data-cy=\"userSelect\"\n          id=\"todoUser\"\n          required\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n\n          ))}\n        </select>\n\n        <span className=\"error\">{hasUserError}</span>\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype UserInfoProps = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoInfoProps = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': todo.completed === true,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/user';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todosList, setTodosList] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todosList),\n    };\n\n    setTodosList(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm onAdd={addTodo} />\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}